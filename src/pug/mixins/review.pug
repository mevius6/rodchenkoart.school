mixin review(props)
  - let attrs = {}
  - attrs.class = [props.class]

  article.review.flow(
    itemprop="review"
    itemscope itemtype="https://schema.org/Review"
  )&attributes(attrs)
    header.review__header(data-hidden)
      link(itemprop="url" href=(props.url))
      meta(itemprop="datePublished" content= props.date)
      form(
        itemprop="reviewRating"
        itemscope itemtype="https://schema.org/Rating"
      )
        meta(itemprop="worstRating" content="0")
        meta(itemprop="bestRating" content="5")
        fieldset.rating-wrapper
          legend(data-hidden)
            | Рейтинг: #[span(itemprop="ratingValue") #{props.rating || 5}]
          if props.stars
            .rating
              each i in Array.from(Array(5).keys())
                - let v = `${props.id}-${i+1}`
                input(type="radio" name="rating" id= v value= v data-hidden)
                //- &attributes({'checked': props.rating.includes(i+1)})
                label.rating__star(for= v)

    blockquote.review__content.flow
      h3.review__headline(itemprop="name")= props.title
      if props.collapsible
        .flow(itemprop="reviewBody" id=`${props.id}-content`)
          if Array.isArray(props.text)
            p.review__lead.truncate-overflow= props.text[0]
            p.review__body.flow.collapse
              each val, i in props.text
                if i!==0
                  | #[span #{val}]
          else
            p.review__lead.truncate-overflow= props.text
      else
        p.review__lead.truncate-overflow(itemprop="reviewBody")= props.text

    footer.review__footer
      span.review__author
        .review__author-avatar
          +picture({
            class: [{'svg-filter': props.avatarFilter}],
            imagePath: 'avatars',
            src: props.avatar,
            format: 'png',
            width: 256,
          })
        .review__author-name.subhead(
          itemprop="author"
          itemscope itemtype="https://schema.org/Person"
        )
          //- span(itemprop="name") #{props.username}
          +link({
            base: 'review',
            href: props.link,
            text: props.username
          })(itemprop="name")

      if props.collapsible
        cite.review__cite(itemprop="publisher")
          button(
            tabindex="0"
            data-disclosure
            aria-controls=`${props.id}-content`
            aria-expanded="false"
            data-js-anim='bg-gradient'
          ) Читать полностью

      //- cite.review__cite(
        itemprop="publisher"
        itemscope itemtype="https://schema.org/Organization")
        +link({
          base: 'review',
          href: props.link,
          text: props.publisher
        })(itemprop="name")
